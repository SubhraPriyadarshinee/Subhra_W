{"version":3,"file":"static/js/705.840c29ff.chunk.js","mappings":"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","sources":["components/common/bottom-image-card/bottom-image-card.styles.ts","components/common/bottom-image-card/bottom-image-card.tsx","components/common/dialog-box/dialog-overage.tsx","components/regulated-item/regulated-item-modal.tsx","components/scan-upc/scan-upc.styles.ts","components/common/dialog-box/dialog-confim.tsx","components/common/images/scan-2d-barcode.tsx","components/scan-upc/scan-upc.tsx","../node_modules/@mui/icons-material/ArrowBack.js","../node_modules/@mui/material/DialogTitle/DialogTitle.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["export const styles = {\n  bottomSpace: {\n    borderTop: \"1px solid lightgray\",\n    m: 2,\n    pb: 10,\n  },\n  chip: {\n    borderRadius: 0,\n    left: 16,\n    position: \"absolute\",\n    top: 16,\n  },\n  wrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    height: 50,\n    justifyContent: \"center\",\n    position: \"relative\",\n  },\n  center: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    margin: \"16px\",\n  },\n};\n","import Box from \"@mui/material/Box\";\nimport Chip from \"@mui/material/Chip\";\nimport Paper from \"@mui/material/Paper\";\n\nimport { styles } from \"./bottom-image-card.styles\";\n\ninterface bottomImageCardProps {\n  /**\n   * id: String thats needs to be displayed in chip\n   */\n  id?: string;\n  children: JSX.Element | JSX.Element[];\n}\n\n/**\n * Paper element with chip at top-left\n * and render children within paper\n */\nexport const BottomImageCard = ({ id, children }: bottomImageCardProps) => {\n  return (\n    <Paper elevation={2} sx={{ m: 2 }}>\n      <Box sx={styles.wrapper}>\n        {id && <Chip label={id} color=\"primary\" sx={styles.chip} />}\n      </Box>\n      <Box sx={styles.center}>{children}</Box>\n      <Box sx={styles.bottomSpace} />\n    </Paper>\n  );\n};\n","import React from 'react'\nimport { Dialog, Typography, Box, DialogContent, DialogContentText, Divider, IconButton, DialogActions, Button } from '@mui/material'\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { styles } from \"./dialog-box.style\";\n\n\ninterface overageProps {\n    open: boolean,\n    header: string,\n    content: string,\n    handleClose: () => void\n}\n\nexport default function DialogOverage({ open, header, content, handleClose }: overageProps) {\n\n  return (\n    <Dialog \n        open={open}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        PaperProps={{ sx: styles.paper }}\n        onClose={handleClose}\n    >\n        <Box sx={styles.titleContainer}>\n            <Typography gutterBottom variant=\"h4\" component=\"div\">\n              <b>{header}</b>\n            </Typography>\n            <IconButton aria-label=\"close\" onClick={handleClose}>\n              <CloseIcon fontSize=\"large\" />\n            </IconButton>\n        </Box>\n\n        <Divider />\n\n        <DialogContent>\n            <DialogContentText\n              id=\"alert-dialog-description\"\n              sx={{ fontSize: \"20px\", color: \"black\" }}\n            >\n              {content.split('\\n').map((line: String) => {\n                return (\n                  <div style={{\"marginBottom\": \"15px\"}}>\n                    {line}\n                  </div>\n                )\n              })}\n            </DialogContentText>\n        </DialogContent>\n        <Divider />\n          <DialogActions sx={{ m: 2 }}>\n            <Button\n              variant=\"contained\"\n              key=\"receive\"\n              size=\"large\"\n              sx={styles.button}\n              onClick={handleClose}\n            >\n              Close\n            </Button>\n        </DialogActions>\n    </Dialog>\n  )\n}\n","import { memo } from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { DeliveryDocumentLine } from \"../../types/instruction\";\nimport { MyAppsData } from \"../../types/my-apps\";\nimport { sessionHandler } from \"../../utilities/session-handler\";\nimport {\n  RegulatedImages,\n  regulatedItemInfoFromDeliveryDocumentLine,\n} from \"./regulated-images\";\nimport { styles } from \"./regulated-items.styles\";\n\ninterface RegulatedItemModalProps {\n  open: boolean;\n  onApprove: () => void;\n  onClose: () => void;\n  regulatedItemDeliveryDocLine?: DeliveryDocumentLine | null;\n}\n/**\n * modal to render regulated item function\n */\nexport const RegulatedItemModal = memo(\n  ({\n    open,\n    onApprove,\n    onClose,\n    regulatedItemDeliveryDocLine,\n  }: RegulatedItemModalProps) => {\n    if (!regulatedItemDeliveryDocLine) {\n      return null;\n    }\n\n    const myAppsData = sessionHandler.getSessionStorage<MyAppsData>(\"myApps\");\n    const enableRegulatedItemChange =\n      myAppsData?.dynamicConfig.enableRegulatedItemChange || false;\n\n    const itemDescription1 = enableRegulatedItemChange\n      ? regulatedItemDeliveryDocLine.description\n      : regulatedItemDeliveryDocLine.itemDescription1;\n\n    const itemUPC = enableRegulatedItemChange\n      ? regulatedItemDeliveryDocLine.itemUpc\n      : regulatedItemDeliveryDocLine.itemUPC;\n\n    const { text = \"\", images } = regulatedItemInfoFromDeliveryDocumentLine(\n      regulatedItemDeliveryDocLine\n    );\n\n    return (\n      <Dialog\n        open={open}\n        onClose={onClose}\n        aria-labelledby=\"regulated-item-modal-title\"\n        aria-describedby=\"regulated-item-modal-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\" sx={styles.dialogText}>\n          <Typography variant=\"h6\" component=\"div\" sx={{ fontWeight: \"bold\" }}>\n            {text}\n          </Typography>\n          <Typography variant=\"caption\" component=\"div\">\n            Please confirm all cases include the labels below.\n          </Typography>\n        </DialogTitle>\n        <DialogContent sx={styles.dialogText}>\n          <RegulatedImages imageUrls={images} />\n          <Box id=\"alert-dialog-description\" sx={{ color: \"white\" }}>\n            <Typography variant=\"h6\" sx={styles.itemDescription}>\n              {itemDescription1}\n            </Typography>\n            <Typography gutterBottom variant=\"body2\">\n              {`UPC: ${itemUPC}`}\n            </Typography>\n          </Box>\n        </DialogContent>\n        <Box sx={styles.info}>\n          Please apply this label or confirm the label is applied.\n        </Box>\n        <DialogActions>\n          <Button variant=\"contained\" sx={styles.button} onClick={onApprove}>\n            Continue\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n);\nRegulatedItemModal.displayName = \"RegulatedItemModal\";\n","export const styles = {\n  button: {\n    borderColor: \"primary.dark\",\n    borderRadius: 20,\n    color: \"primary.dark\",\n    fontWeight: \"bold\",\n  },\n  h4: {\n    width: \"100%\",\n    fontweight: \"bold\",\n    color: \"#0071DC\",\n    flexGrow: 1,\n    textAlign: \"center\",\n    margin: \"32px\",\n  },\n  h6: {\n    width: \"100%\",\n    color: \"primary.dark\",\n    flexGrow: 1,\n    textAlign: \"center\",\n    margin: \"32px\",\n  },\n  chip: {\n    borderRadius: 0,\n    marginLeft: 2,\n    top: 16,\n  },\n  finishScanningButton: {\n    borderColor: \"primary.dark\",\n    borderRadius: 20,\n    color: \"primary.dark\",\n    fontWeight: \"bold\",\n    margin: \"32px\",\n  },\n};\n","import { memo } from \"react\";\n\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { styles } from \"./dialog-box.style\";\n\ninterface dialogBoxProps {\n  getHeader: JSX.Element;\n  getContent: JSX.Element;\n  handleConfirm: () => void;\n  open: boolean;\n}\n\nexport const CustomConfirmDialogBox = memo(\n  ({\n    open,\n    getHeader,\n    getContent,\n    handleConfirm,\n  }: dialogBoxProps) => {\n    return (\n      <div>\n        <Dialog\n          open={open}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          PaperProps={{ sx: styles.paper }}\n        >\n          <Box sx={styles.titleContainer}>\n            <Typography gutterBottom variant=\"h4\" component=\"div\">\n              <b>{getHeader}</b>\n            </Typography>\n          </Box>\n          <DialogContent sx={{ mb: 20 }}>\n            <DialogContentText\n              id=\"alert-dialog-description\"\n              sx={{ fontSize: \"25px\", color: \"black\" }}\n            >\n              {getContent}\n            </DialogContentText>\n          </DialogContent>\n          <Divider />\n          <DialogActions sx={{ m: 2 }}>\n            <Button\n              variant=\"contained\"\n              key=\"receive\"\n              size=\"large\"\n              sx={styles.button}\n              onClick={handleConfirm}\n            >\n              Confirm\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n);\n","export const Scan2DBarcode = () => (\n  <svg width={200} height={200} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <rect width={200} height={200} rx={100} fill=\"#00539D\" />\n    <mask\n      id=\"a\"\n      style={{\n        maskType: \"alpha\",\n      }}\n      maskUnits=\"userSpaceOnUse\"\n      x={0}\n      y={0}\n      width={200}\n      height={200}\n    >\n      <rect width={200} height={200} rx={100} fill=\"#fff\" />\n    </mask>\n    <g mask=\"url(#a)\">\n      <rect x={42} y={119} width={118} height={51} rx={4} fill=\"#fff\" />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M51 162h8v-35h-8v35ZM113 162h8v-35h-8v35ZM63 162h13v-35H63v35ZM88 162h13v-35H88v35ZM137 162h13v-35h-13v35ZM80.54 162h2.92v-35h-2.92v35ZM105.54 162h2.92v-35h-2.92v35ZM126.08 162h5.84v-35h-5.84v35Z\"\n        fill=\"#211E1F\"\n      />\n      <rect x={54} y={21} width={91} height={91} rx={4} fill=\"#fff\" />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M92.06 38.26a2.166 2.166 0 0 0-2.17-2.162H72.54a2.166 2.166 0 0 0-2.169 2.162v17.298c0 1.194.972 2.163 2.169 2.163h15.182v4.324h4.338v4.325h-8.675v4.324h-8.676v4.325h-2.169a2.166 2.166 0 0 0-2.169 2.162V94.48c0 1.193.972 2.162 2.169 2.162H89.89a2.166 2.166 0 0 0 2.17-2.162v-6.487h4.337v4.324h4.338v4.325h8.676v-4.325h-8.676V83.668h-8.676v-6.487a2.166 2.166 0 0 0-2.169-2.162h-6.506v-4.325h8.675v4.325h4.338v4.325h8.676V87.993h4.338v-4.325h4.337V92.317h4.338v-4.324h4.338v-4.325h-8.676V75.02h4.338V66.37h8.676v4.324h4.338V66.37h-4.338v-4.325h-13.014v4.325h-4.337V57.72h-4.338v4.324h-8.676v-4.324H89.89a2.166 2.166 0 0 0 2.17-2.163v-6.487h4.337v-4.324h8.676v4.324h-4.338v4.325h4.338v-4.325h4.338v6.487c0 1.194.971 2.163 2.168 2.163h17.352a2.167 2.167 0 0 0 2.169-2.163V38.26a2.167 2.167 0 0 0-2.169-2.162h-17.352a2.166 2.166 0 0 0-2.168 2.162v6.487h-4.338v-4.325h-4.338v-4.324h-4.338V44.747h-4.338V38.26Zm17.351 28.11V75.019h-8.676V66.37h8.676ZM74.708 53.396H87.72V40.422H74.708v12.974Zm52.054 0h-13.014V40.422h13.014v12.974ZM74.708 92.317H87.72V79.344H74.708v12.973Zm47.716-43.246h-4.338v-4.324h4.338v4.324ZM79.046 87.993h4.338v-4.325h-4.338v4.325ZM74.708 66.37v-4.325H70.37v4.325h4.338Zm8.676-17.299h-4.338v-4.324h4.338v4.324Zm39.04 30.273h4.338v-4.325h-4.338v4.325Zm0 17.298h4.338v-4.325h-4.338v4.325Z\"\n        fill=\"#212121\"\n      />\n    </g>\n  </svg>\n);","import { useMutation, useQuery } from \"@tanstack/react-query\";\nimport { AxiosError, AxiosResponse } from \"axios\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Chip from \"@mui/material/Chip\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { AlertContext } from \"../../contexts/alert\";\nimport { GlobalsContext } from \"../../contexts/globals\";\nimport {\n  DeliveryDocument,\n  InstructionResponse,\n  PrintJob,\n} from \"../../types/instruction\";\nimport { ScannedDataListitem } from \"../../types/instruction\";\nimport { MyAppsData } from \"../../types/my-apps\";\nimport { PrintRequestResponse } from \"../../types/printing\";\nimport {\n  apiHandler,\n  GetReceiveInstructionRequest,\n} from \"../../utilities/api-handler\";\nimport { appLogger } from \"../../utilities/app-logs/app-logger\";\nimport { axiosRequest } from \"../../utilities/axios-request\";\nimport { applicationIdentifier } from \"../../utilities/global-scanner/utilities/application-identifier\";\nimport { printingHandler } from \"../../utilities/printing/printing-handler\";\nimport { useLazyPrint } from \"../../utilities/printing/useLazyPrint\";\nimport { sessionHandler } from \"../../utilities/session-handler\";\nimport { useScannedEventListener } from \"../../utilities/useEventListener\";\nimport { useHandlePageRefresh } from \"../../utilities/useHandlePageRefresh\";\nimport { BottomImageCard } from \"../common/bottom-image-card/bottom-image-card\";\nimport { CustomConfirmDialogBox } from \"../common/dialog-box/dialog-confim\";\nimport { Barcode } from \"../common/images/barcode\";\nimport { Scan2DBarcode } from \"../common/images/scan-2d-barcode\";\nimport { SubHeader } from \"../common/sub-header/sub-header\";\nimport { ScanDockTagOrTclNavState } from \"../dock-tag/dock-tag\";\nimport { useGlobalKeyboard } from \"../global-keyboard/useGlobalKeyboard\";\nimport { RegulatedItemModal } from \"../regulated-item/regulated-item-modal\";\nimport { allowedStatusHandler } from \"./allowed-status\";\nimport { styles } from \"./scan-upc.styles\";\nimport DialogOverage from \"../common/dialog-box/dialog-overage\";\n\nconst postScannedUpcInfo = (\n  receiveInstructionRequest: GetReceiveInstructionRequest\n) =>\n  axiosRequest(apiHandler.getReceiveInstruction(receiveInstructionRequest), {\n    description: `Scan-Upc: get upc ${receiveInstructionRequest.upcNumber} details`,\n  });\n\nconst getScannedUpcInfo = (deliveryNumber: string, upcNumber: string) =>\n  axiosRequest(apiHandler.getScannedUpcInfo({ deliveryNumber, upcNumber }), {\n    description: `Scan-Upc: get upc ${upcNumber} details`,\n  });\n\nexport interface ScanUpcNavState extends ScanDockTagOrTclNavState {\n  gdmDeliveryDocuments: DeliveryDocument[];\n  scannedUpc: string;\n  itemQuantity?: string;\n  receivingType?: string;\n  scannedDataList?: ScannedDataListitem[] | null;\n  trackingId?: string;\n  printJob?: PrintJob;\n  isTclFreeFlow?: boolean;\n}\n\n/**\n *\n * @route Fetches item upc details\n * @description\n *  if matched with mutiple POs -> PO-Selection route\n *\n *  else -> Item-Quantity route\n */\nexport default function ScanUpc() {\n  // get state values from scan-dock-tag page\n  const scanDockTagOrTclNavState =\n    useHandlePageRefresh<ScanDockTagOrTclNavState>();\n  const navigate = useNavigate();\n  const [upc, setUpc] = useState(\"\");\n  const [deliveryNumber, setDeliveryNumber] = useState(\"0\");\n  const [errorCode, setErrorCode] = useState(\"\");\n  const [isTclFreeFlow, setIsTclFreeFlow] = useState(false);\n  const [parsed2dMap, setParsed2dMap] = useState(new Map<string, string>());\n  const [deliveryDoc, setDeliveryDoc] = useState<DeliveryDocument[] | null>(\n    null\n  );\n  const [openRegulatedModal, setopenRegulatedModal] = useState(false);\n  const [openLabelPrintSuccess, setopenLabelPrintSuccess] = useState(false);\n\n  const { setAlerts } = useContext(AlertContext);\n  const { globals, setGlobals } = useContext(GlobalsContext);\n  const [header, setHeader] = useState(<></>);\n  const [content, setContent] = useState(<></>);\n  const [showHardOveragePopUp, setShowHardOveragePopUp] = useState<boolean>(false);\n\n  const myAppsData = sessionHandler.getSessionStorage<MyAppsData>(\"myApps\");\n  const enableDockTag = myAppsData?.dynamicConfig.enableDockTag || false;\n  const enableRegulatedItemChange =\n    myAppsData?.dynamicConfig.enableRegulatedItemChange || false;\n  const enableQtyCorrection =\n    myAppsData?.dynamicConfig.enableQtyCorrection || false;\n  const enableSkipQtyPage =\n    myAppsData?.dynamicConfig.enableSkipQtyPage || false;\n  const enableIsAuditRequired =\n    myAppsData?.dynamicConfig.enableIsAuditRequired || false;\n  const enableNewTCLRoute =\n    myAppsData?.dynamicConfig.enableNewTCLRoute || false;\n  const isTCLRouteFlow =\n    enableNewTCLRoute && scanDockTagOrTclNavState?.isTCLRoute;\n  const enableMultiSku2D = myAppsData?.dynamicConfig.enableMultiSku2D || false;\n  useEffect(() => {\n    // reset multi sku if on root page or scan-dock-tag page\n    setGlobals({\n      ...globals,\n      multiSku: false,\n    });\n    const UPC = scanDockTagOrTclNavState?.dockScanUpc || undefined;\n    const PO = scanDockTagOrTclNavState?.dockScanUpc || undefined;\n    const parsed2DMap = scanDockTagOrTclNavState?.parsed2DMap;\n    let barcodeData = parsed2DMap?.get(\"01\");\n    if(isTCLRouteFlow && parsed2DMap && barcodeData){\n      setParsed2dMap(parsed2DMap);\n      onBarcodeScanned(barcodeData);\n    }\n    if (isTCLRouteFlow && PO !== undefined && (!parsed2DMap || !parsed2DMap.size)) {\n      setDeliveryNumber(PO);\n    }\n    if (isTCLRouteFlow && UPC !== undefined && (!parsed2DMap || !parsed2DMap.size)) {\n      setIsTclFreeFlow(true);\n      onBarcodeScanned(`${scanDockTagOrTclNavState?.dockScanUpc}`);\n    }\n    if(scanDockTagOrTclNavState?.deliveryDocuments!==undefined) {\n      getScannedUpcInfoSuccess(scanDockTagOrTclNavState?.deliveryDocuments);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const getScannedUpcInfoSuccessViaGdm = (response: AxiosResponse) => {\n    setAlerts({ success: \"UPC found\" });\n\n    const allowedDeliveryDocs = allowedStatusHandler.filterDeliveryDocuments(\n      response.data\n    );\n    const navState = {\n      ...scanDockTagOrTclNavState,\n      gdmDeliveryDocuments: allowedDeliveryDocs,\n      scannedUpc: upc,\n    };\n\n    // if respnse has multiple delivery documents, user has to slect from the list\n    if (allowedDeliveryDocs.length > 1) {\n      // navigate to po-selection route\n      appLogger.action(\"Scan-Upc: navigate to po-selection page\");\n      navigate(\"/po-selection\", {\n        state: {\n          ...navState,\n          itemQuantity: parsed2dMap.get(\"30\"),\n          scannedDataList: getScannedDataList(parsed2dMap),\n          receivingType: parsed2dMap.size > 0 ? \"GS1\" : \"upc\",\n        },\n      });\n    } else if (allowedDeliveryDocs.length === 1) {\n      // navigate to enter-quntity route\n      appLogger.action(\"Scan-Upc: navigate to item-quantity page\");\n      navigate(\"/item-quantity\", {\n        state: {\n          ...navState,\n          itemQuantity: parsed2dMap.get(\"30\"),\n          isTclFreeFlow,\n          scannedDataList: getScannedDataList(parsed2dMap),\n          receivingType: parsed2dMap.size > 0 ? \"GS1\" : \"upc\",\n        },\n      });\n    } else {\n      setAlerts({ error: \"No POs are available\" });\n      appLogger.error(\"Scan-Upc: no po's availaible for scanned upc\", {});\n    }\n  };\n\n  const getScannedUpcInfoErrorViaGdm = (error: AxiosError<any>) => {\n    setAlerts({\n      error:\n        (error?.response?.data.description &&\n          error?.response?.data.description[0]) ||\n        error?.message ||\n        \"UPC error\",\n    });\n  };\n\n  const handleCloseOveragePopup = () => {\n    appLogger.action(\"item-quantity: navigate to scan-cart page\");\n    navigate(\"/\");\n  }\n\n  const getScannedUpcInfoSuccess = (response: AxiosResponse) => {\n    try {\n      const allowedDeliveryDocs = response.data\n        .deliveryDocuments as DeliveryDocument[] || [];\n      setDeliveryDoc(allowedDeliveryDocs);\n      const instructionCode =\n        response.data.instruction?.instructionCode || null;\n\n      if(enableNewTCLRoute && scanDockTagOrTclNavState && allowedDeliveryDocs && allowedDeliveryDocs.length) {\n        // In case of TCL free receiving, initial value of delivery number is set as 0 but once we receive delivery documents, we need to update the delivery number\n        scanDockTagOrTclNavState.deliveryNumber = allowedDeliveryDocs[0].deliveryNumber;\n      }\n      \n      const navState = {\n        ...scanDockTagOrTclNavState,\n        gdmDeliveryDocuments: allowedDeliveryDocs,\n        scannedUpc: upc,\n      };\n\n      const auditRequired = isAuditRequired(allowedDeliveryDocs);\n      const receivingTier = getReceivingTier(allowedDeliveryDocs);\n\n      // if respnse has multiple delivery documents, user has to slect from the list\n      if (instructionCode === \"MANUAL_PO_SELECTION\") {\n        // navigate to po-selection route\n        setAlerts({ success: \"UPC found\" });\n        appLogger.action(\"Scan-Upc: navigate to po-selection page\");\n        if (enableIsAuditRequired) {\n          navigate(\"/po-selection\", {\n            state: {\n              ...navState,\n              itemQuantity:\n                auditRequired === false ? parsed2dMap.get(\"30\") : null,\n              scannedDataList: getScannedDataList(parsed2dMap),\n              receivingType: parsed2dMap.size > 0 ? \"GS1\" : \"upc\",\n            },\n          });\n        }\n        else {\n          navigate(\"/po-selection\", {\n            state: {\n              ...navState,\n              itemQuantity:\n                receivingTier && receivingTier === \"HIGH\"\n                  ? parsed2dMap.get(\"30\")\n                  : null,\n              scannedDataList: getScannedDataList(parsed2dMap),\n              receivingType: parsed2dMap.size > 0 ? \"GS1\" : \"upc\",\n            },\n          });\n        }\n      }\n      else if(instructionCode === \"MULTI-SKU\") {\n        setAlerts({ success: \"Multi Sku found\"});\n        // navigate to multisku page, also pass the scanned list\n        setGlobals({ ...globals, multiSku: true });\n        navigate(\"/scan-upc-multisku\", {\n          state: {\n            ...navState,\n            itemQuantity: auditRequired === false ? parsed2dMap.get(\"30\") : null,\n            scannedDataList: getScannedDataList(parsed2dMap),\n            receivingType: parsed2dMap.size > 0 ? \"GS1\" : \"upc\",\n          }\n        });\n      }\n      else if (instructionCode === \"WFS Quantity Capture\") {\n        var itemQty =\n          receivingTier && receivingTier === \"HIGH\"\n            ? parsed2dMap.get(\"30\")\n            : null;\n\n        if (enableIsAuditRequired) {\n          itemQty = auditRequired === false ? parsed2dMap.get(\"30\") : null;\n        }\n\n        if (\n          enableSkipQtyPage &&\n          auditRequired === false &&\n          allowedDeliveryDocs != null\n        ) {\n          // skip quantity page\n          appLogger.action(\"Scan-Upc: trusted seller skip item-quantity page\");\n          receiveForTrustedSeller(allowedDeliveryDocs);\n        } else {\n          // navigate to enter-quntity route\n          setAlerts({ success: \"Scan successful\" });\n          appLogger.action(\"Scan-Upc: navigate to item-quantity page\");\n          navigate(\"/item-quantity\", {\n            state: {\n              ...navState,\n              itemQuantity: itemQty,\n              isTclFreeFlow,\n              scannedDataList: getScannedDataList(parsed2dMap),\n              receivingType: parsed2dMap.size > 0 ? \"GS1\" : \"upc\",\n            },\n          });\n        }\n      } else {\n        const isLithium =\n          allowedDeliveryDocs[0].deliveryDocumentLines[0]\n            ?.isLithiumIonVerificationRequired || false;\n        const isLimited =\n          allowedDeliveryDocs[0].deliveryDocumentLines[0]\n            ?.isLimitedQtyVerificationRequired || false;\n        const isRegulated = isLimited || isLithium;\n        if (isRegulated && !instructionCode) {\n          setAlerts({ loading: false });\n          appLogger.action(\"Scan-Upc: checking for regulated Item\");\n          setopenRegulatedModal(true);\n        } else {\n          setAlerts({ error: \"No POs are available\" });\n          appLogger.error(\"Scan-Upc: no po's availaible for scanned upc\", {});\n        }\n      }\n    } catch (error) {\n      appLogger.error(\n        \"Scan-Upc: Unable to process success response for receving\",\n        {\n          response,\n        }\n      );\n    }\n  };\n\n  const isAuditRequired = (allowedDeliveryDocs: DeliveryDocument[]) => {\n    if (\n      allowedDeliveryDocs && \n      allowedDeliveryDocs.length > 0 &&\n      allowedDeliveryDocs[0].additionalInfo &&\n      allowedDeliveryDocs[0].additionalInfo.isAuditRequired !== undefined &&\n      allowedDeliveryDocs[0].additionalInfo.isAuditRequired !== null\n    ) {\n      return allowedDeliveryDocs[0].additionalInfo.isAuditRequired;\n    }\n    return true;\n  };\n\n  const getReceivingTier = (allowedDeliveryDocs: DeliveryDocument[]) => {\n    if (\n      allowedDeliveryDocs.length > 0 &&\n      allowedDeliveryDocs[0].additionalInfo &&\n      allowedDeliveryDocs[0].additionalInfo.receivingTier\n    ) {\n      return allowedDeliveryDocs[0].additionalInfo.receivingTier;\n    }\n    return null;\n  };\n\n  const getScannedUpcInfoError = (error: AxiosError<any>) => {\n    setAlerts({\n      error:\n        error?.response?.data?.errorMessage || error?.message || \"UPC error\",\n    });\n    const errorCode = error?.response?.data?.errorCode;\n\n    setErrorCode(errorCode);\n    if (!(enableNewTCLRoute && errorCode === \"TCL.201.NOT_FOUND\")) {\n      navigate(-1);\n    }\n  };\n\n  const { mutate: receiveItems } = useMutation(postScannedUpcInfo, {\n    onSuccess: (response) =>\n      getScannedUpcInfoSuccess(response as AxiosResponse),\n    onError: (error) => getScannedUpcInfoError(error as AxiosError<any>),\n  });\n\n  const onApproveRegulatedItemLables = useCallback(() => {\n    appLogger.info(\"Scan-Upc: approved all regulated items are labelled\", {});\n    setopenRegulatedModal(false);\n    const gs1 = parsed2dMap.get(\"gs1\") && parsed2dMap.get(\"gs1\");\n    if (deliveryDoc) {\n      receiveItems({\n        deliveryNumber: `${scanDockTagOrTclNavState?.deliveryNumber}`,\n        doorNumber: `${scanDockTagOrTclNavState?.doorNumber}`,\n        upcNumber: parsed2dMap.size > 0 ? parsed2dMap.get(\"01\") || \"\" : upc,\n        previouslyScannedDataList: (gs1 && [gs1]) || null,\n        deliveryDocuments: deliveryDoc,\n        enteredQty: null,\n        isMultiSKUItem: globals.multiSku,\n        isVendorComplianceValidated: true,\n        scannedDataList:\n          parsed2dMap.size > 0 ? getScannedDataList(parsed2dMap) : null,\n        receivingType: parsed2dMap.size > 0 ? \"GS1\" : \"UPC\",\n      });\n    }\n  }, [\n    receiveItems,\n    setopenRegulatedModal,\n    deliveryDoc,\n    globals.multiSku,\n    scanDockTagOrTclNavState,\n    upc,\n    parsed2dMap,\n  ]);\n\n  const onApprovePrintingLabelSuccess = useCallback(() => {\n    appLogger.info(\n      \"Update-Item-Quantity: Approved for editing trusted seller quantity\",\n      {}\n    );\n    appLogger.action(\"Item-Quantity: navigate to scan-dock-tag page\");\n    setAlerts({ loading: false });\n    setopenLabelPrintSuccess(false);\n    navigate(\"/scan-dock-tag-or-tcl\", {\n      state: {\n        cartId: scanDockTagOrTclNavState?.cartId,\n        doorNumber: `${scanDockTagOrTclNavState?.doorNumber}`,\n      },\n    });\n  }, [setAlerts, setopenLabelPrintSuccess, scanDockTagOrTclNavState]);\n\n  const printInstructionPrintJobSuccess = useCallback(\n    (response: PrintRequestResponse[]) => {\n      appLogger.info(\"Item-Quantity: printjob success\", response);\n      setopenLabelPrintSuccess(true);\n    },\n    [setopenLabelPrintSuccess]\n  );\n  const printInstructionPrintJobError = useCallback(\n    (error: unknown) => {\n      appLogger.error(\"Item-Quantity: printjob error\", error as object);\n      setAlerts({\n        error:\n          \"There was an error printing. Check the printer status or re-connect to continue.\",\n      });\n    },\n    [setAlerts]\n  );\n\n  const [printInstructionPrintJob] = useLazyPrint({\n    onPrintRequestSuccess: printInstructionPrintJobSuccess,\n    onPrintRequestError: printInstructionPrintJobError,\n  });\n\n  const receiveTrustedItemsSuccess = (\n    response: AxiosResponse<InstructionResponse>\n  ) => {\n    // resetting previouslyScannedDataList on successful receive instruction.\n    setGlobals({\n      ...globals,\n      previouslyScannedDataList: [],\n    });\n\n    const instructionCode = response.data.instruction?.instructionCode || null;\n    if(instructionCode == 'WFSOverageReceiving'){\n      // check for OverageReceiving Instruction Code\n      setShowHardOveragePopUp(true);\n      setAlerts({ loading: false });\n    }\n    else if(instructionCode == 'MULTI-SKU'){\n      // check for audit required = false case for multi-sku multi-destination receiving\n      setAlerts({ success: \"Multi Sku found\"});\n\n      // navigate to multisku page, also pass the scanned list\n      const navState = {\n        ...scanDockTagOrTclNavState,\n        gdmDeliveryDocuments: response.data.deliveryDocuments,\n        scannedUpc: upc,\n      };\n\n      const auditRequired = isAuditRequired(response.data.deliveryDocuments);\n\n      setGlobals({ ...globals, multiSku: true });\n      navigate(\"/scan-upc-multisku\", {\n        state: {\n          ...navState,\n          itemQuantity: auditRequired === false ? parsed2dMap.get(\"30\") : null,\n          scannedDataList: getScannedDataList(parsed2dMap),\n          receivingType: parsed2dMap.size > 0 ? \"GS1\" : \"upc\",\n        }\n      });\n    }\n    else{\n      // before printing we need to identify casepack or breakpack\n      // print labels on if casepack\n      const inventoryStatus =\n        response.data.instruction?.container?.inventoryStatus;\n      const { printJob } = response.data;\n      switch (inventoryStatus) {\n        case \"PICKED\": {\n          // casepack\n          if (printJob) {\n            appLogger.info(\"Item-Quantity: printjob request\", printJob);\n            printInstructionPrintJob(printJob);\n          } else {\n            appLogger.error(\"Item-Quantity: printjob not found\", {});\n            console.error(\"No print job found\");\n            setAlerts({ error: \"No print job found\" });\n          }\n          break;\n        }\n        case \"AVAILABLE\": {\n          // breakpack\n          const trackingId =\n            response.data.instruction?.container.trackingId || \"\";\n          appLogger.action(\"Item-Quantity: navigate to breakpack page\");\n          if (!enableQtyCorrection) {\n            setGlobals({ ...globals, disableQuantityCorrection: false });\n          }\n          navigate(\"/breakpack\", {\n            state: {\n              upc,\n              splitQty: 0,\n              trackingId,\n              printJob,\n            },\n          });\n          break;\n        }\n        default: {\n          appLogger.error(\n            `Item-Quantity: inventoryStatus ${inventoryStatus} not supported`,\n            {}\n          );\n          console.error(\"Other types are not supported yet\");\n          setAlerts({\n            error: `Other inventoryStatus ${inventoryStatus} not supported.`,\n          });\n          break;\n        }\n      }\n      {\n        setHeader(<>Barcode scan success</>);\n        setContent(<>Receiving successful, label printed</>);\n      }\n    }\n  };\n\n  const receiveItemsError = (error: AxiosError<any>) => {\n    setAlerts({\n      error:\n        error?.response?.data?.errorMessage ||\n        error?.message ||\n        \"Error while receiving\",\n    });\n  };\n  const postItemReceiveRequest = (\n    receiveInstructionRequest: GetReceiveInstructionRequest\n  ) =>\n    axiosRequest(apiHandler.getReceiveInstruction(receiveInstructionRequest), {\n      description: `Item-Quantity: receive items for upc ${receiveInstructionRequest.upcNumber} delivery ${receiveInstructionRequest.deliveryNumber}`,\n    });\n  const { mutate: receiveTrustedItems } = useMutation(postItemReceiveRequest, {\n    onSuccess: (response) =>\n      receiveTrustedItemsSuccess(\n        response as AxiosResponse<InstructionResponse>\n      ),\n    onError: (error) => receiveItemsError(error as AxiosError<any>),\n  });\n\n  const receiveForTrustedSeller = useCallback(\n    async (deliveryDocs: DeliveryDocument[]) => {\n      const gs1 = parsed2dMap.get(\"gs1\") && parsed2dMap.get(\"gs1\");\n      const receiveItemRequest = {\n        deliveryNumber: `${scanDockTagOrTclNavState?.deliveryNumber}`,\n        doorNumber: `${scanDockTagOrTclNavState?.doorNumber}`,\n        upcNumber: upc,\n        deliveryDocuments: deliveryDocs,\n        enteredQty: parsed2dMap?.get(\"30\")? Number(parsed2dMap.get(\"30\")): null, // In the 2D Scan string, if quantity is missing, then it is a multi-sku flow and qty will be sent as null\n        isMultiSKUItem: globals.multiSku,\n        scannedDataList: getScannedDataList(parsed2dMap),\n        receivingType: parsed2dMap.size > 0 ? \"GS1\" : \"upc\",\n        previouslyScannedDataList: (gs1 && [gs1]) || null,\n      };\n      const isprinterSelected = await printingHandler.isPrinterSelected();\n      if (isprinterSelected) {\n        // trigger loading\n        setAlerts({ loading: true });\n        if (enableRegulatedItemChange) {\n          receiveTrustedItems(\n            Object.assign(receiveItemRequest, {\n              isVendorComplianceValidated: true,\n            })\n          );\n        } else {\n          receiveTrustedItems(receiveItemRequest);\n        }\n      } else {\n        setAlerts({\n          error: \"No printer selected, please select a printer to receive\",\n        });\n        appLogger.error(\n          \"Item-Quantity: No printer selected, please select a printer to receive\",\n          {}\n        );\n      }\n    },\n    [\n      receiveTrustedItems,\n      setopenRegulatedModal,\n      deliveryDoc,\n      scanDockTagOrTclNavState,\n      upc,\n      parsed2dMap,\n    ]\n  );\n\n  const { refetch } = useQuery(\n    [\"scanUPC\", upc, parsed2dMap],\n    () => {\n      const gs1 = parsed2dMap.get(\"gs1\") && parsed2dMap.get(\"gs1\");\n\n      setAlerts({ loading: true });\n      return enableRegulatedItemChange\n        ? postScannedUpcInfo({\n            deliveryNumber: isTCLRouteFlow ? \"0\" : `${scanDockTagOrTclNavState?.deliveryNumber}`,\n            doorNumber: `${scanDockTagOrTclNavState?.doorNumber}`,\n            upcNumber: isTCLRouteFlow\n              ? scanDockTagOrTclNavState?.dockScanUpc\n              : parsed2dMap.size > 0\n              ? parsed2dMap.get(\"01\") || \"\"\n              : upc,\n            previouslyScannedDataList: (gs1 && [gs1]) || null,\n            deliveryDocuments: null,\n            enteredQty: null,\n            isMultiSKUItem: globals.multiSku,\n            isVendorComplianceValidated: false,\n            scannedDataList:\n              parsed2dMap.size > 0 ? getScannedDataList(parsed2dMap) : null,\n            receivingType: parsed2dMap.size > 0 ? \"GS1\" : \"UPC\",\n            ...(enableNewTCLRoute && isTCLRouteFlow && {additionalParams: { po : scanDockTagOrTclNavState?.poNumber}}),\n          })\n        : getScannedUpcInfo(`${scanDockTagOrTclNavState?.deliveryNumber}`, upc);\n    },\n    {\n      enabled: !!upc,\n      onSuccess: enableRegulatedItemChange\n        ? getScannedUpcInfoSuccess\n        : getScannedUpcInfoSuccessViaGdm,\n      onError: enableRegulatedItemChange\n        ? getScannedUpcInfoError\n        : getScannedUpcInfoErrorViaGdm,\n    }\n  );\n\n  const getScannedDataList = (parsed2dMap: Map<string, string>) => {\n    const scannedDataListArray: ScannedDataListitem[] = [];\n    parsed2dMap.forEach((key, value) => {\n      if (value !== \"gs1\") {\n        scannedDataListArray.push({\n          key: applicationIdentifier.get(value)?.purpose,\n          applicationIdentifier: applicationIdentifier.get(value)?.ai,\n          value: key,\n        } as ScannedDataListitem);\n      }\n    });\n    return scannedDataListArray;\n  };\n\n  const onBarcodeScanned = (value: string) => {\n    appLogger.action(`Scan-Upc: scanned/enetered ${value} upc`);\n    if (upc === value) {\n      refetch();\n    } else {\n      setUpc(value);\n    }\n  };\n\n  useScannedEventListener((event) => {\n    const parsed = event.detail.parsed.get(\"1D\");\n    const parsed2dMap = event.detail.parsed.get(\"2D\");\n    if (parsed2dMap) {\n      if (\n        parsed2dMap.get(\"400\") &&\n        parsed2dMap.get(\"01\") &&\n        parsed2dMap.get(\"30\")\n      ) {\n        setParsed2dMap(parsed2dMap);\n        onBarcodeScanned(parsed2dMap.get(\"400\"));\n        if (parsed2dMap.get(\"gs1\")) {\n          setGlobals({\n            ...globals,\n            previouslyScannedDataList: [parsed2dMap.get(\"gs1\")],\n          });\n        }\n      }\n      else if(\n        enableMultiSku2D &&\n        parsed2dMap.get(\"400\") &&\n        parsed2dMap.get(\"00\") &&\n        !parsed2dMap.get(\"01\") &&\n        !parsed2dMap.get(\"30\")\n      ) {\n        // Multi SKU scan - Scan data will only contain PO number and Box ID\n        setParsed2dMap(parsed2dMap);\n        onBarcodeScanned(parsed2dMap.get(\"400\"));\n        if (parsed2dMap.get(\"gs1\")) {\n          setGlobals({\n            ...globals,\n            previouslyScannedDataList: [parsed2dMap.get(\"gs1\")],\n          });\n        }\n      }\n      else {\n        setAlerts({\n          error: `System is unable to process QR code at the moment. Please scan item UPC to receive.`,\n        });\n      }\n    } else if (parsed && !parsed2dMap) {\n      onBarcodeScanned(parsed);\n      setParsed2dMap(new Map<string, string>());\n    } else {\n      setAlerts({\n        error: `Unexpected barcode scanned ${event.detail.scanned}`,\n      });\n    }\n  });\n\n  useGlobalKeyboard(\n    {\n      title: isTCLRouteFlow ? \"Enter PO\" : \"Enter UPC\",\n      inputLabel: isTCLRouteFlow ? \"PO\" : \"UPC\",\n      onClickGlobalKeyboardConfirm: (value: string) => onBarcodeScanned(value),\n    },\n    [upc]\n  );\n\n  const onClickExitDockTag = useCallback(() => {\n    appLogger.action(\"Scan-Upc: exit Dock Tag button clicked\");\n    navigate(\"/scan-dock-tag-or-tcl\", {\n      state: {\n        cartId: scanDockTagOrTclNavState?.cartId,\n        doorNumber: scanDockTagOrTclNavState?.doorNumber,\n      },\n    });\n  }, [navigate, scanDockTagOrTclNavState]);\n\n  const onClickMultiSKU = useCallback(() => {\n    appLogger.action(\"Scan-Upc: exit Dock Tag button clicked\");\n    setGlobals({ ...globals, multiSku: true });\n    navigate(\"/scan-upc-multisku\", {\n      state: scanDockTagOrTclNavState,\n    });\n  }, [setGlobals, globals, navigate, scanDockTagOrTclNavState]);\n\n  const title = enableDockTag\n    ? `Dock Tag ${scanDockTagOrTclNavState?.scannedTclorDockTagValue}`\n    : `TCL ${scanDockTagOrTclNavState?.scannedTclorDockTagValue}: Scan UPC`;\n\n  const exitButton = enableDockTag ? \"Exit Dock Tag\" : \"Exit TCL\";\n\n  return (\n    <>\n      <SubHeader\n        icon={\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n            disabled\n          >\n            <Barcode />\n          </IconButton>\n        }\n        title={title}\n        chip={<Chip label={\"SINGLE SKU\"} color=\"default\" sx={styles.chip} />}\n        actions={[\n          <Button\n            variant=\"outlined\"\n            onClick={onClickExitDockTag}\n            key=\"exit dock tag\"\n            size=\"large\"\n            sx={styles.button}\n          >\n            {exitButton}\n          </Button>,\n        ]}\n      />\n      {openRegulatedModal && (\n        <RegulatedItemModal\n          regulatedItemDeliveryDocLine={\n            deliveryDoc ? deliveryDoc[0].deliveryDocumentLines[0] : null\n          }\n          open={openRegulatedModal}\n          onApprove={onApproveRegulatedItemLables}\n          onClose={() => {\n            setopenRegulatedModal(false);\n            if(isTCLRouteFlow){\n              navigate(-1);\n            }\n          }}\n        />\n      )}\n      {openLabelPrintSuccess && (\n        <CustomConfirmDialogBox\n          getHeader={header}\n          getContent={content}\n          handleConfirm={onApprovePrintingLabelSuccess}\n          open={openLabelPrintSuccess}\n        />\n      )}\n      {showHardOveragePopUp && (\n        <DialogOverage \n          handleClose={handleCloseOveragePopup} \n          header=\"Overage\"\n          content={\"This receipt exceeds the allowable overage. Please contact your manager to open a ticket\"}\n          open={showHardOveragePopUp}\n        />\n      )}\n      <Box />\n      <BottomImageCard id={`Cart #: ${scanDockTagOrTclNavState?.cartId}`}>\n        <Typography variant=\"h4\" component=\"div\" sx={styles.h4}>\n          {isTCLRouteFlow ? \"Scan PO\" : \"Scan 2D barcode or item UPC\"}\n        </Typography>\n        <Scan2DBarcode />\n        <Typography variant=\"h6\" component=\"div\" sx={styles.h6}>\n          Are there multiple SKU numbers for this tag?\n        </Typography>\n        <Button\n          variant=\"outlined\"\n          onClick={onClickMultiSKU}\n          key=\"exit dock tag\"\n          size=\"large\"\n          sx={styles.button}\n        >\n          Multi-SKU\n        </Button>\n      </BottomImageCard>\n    </>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"id\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\nimport DialogContext from '../Dialog/DialogContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\n\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n\n  const {\n    className,\n    id: idProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId: id = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: id\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["styles","bottomSpace","borderTop","m","pb","chip","borderRadius","left","position","top","wrapper","alignItems","display","height","justifyContent","center","flexDirection","margin","BottomImageCard","id","children","Paper","elevation","sx","Box","Chip","label","color","DialogOverage","open","header","content","handleClose","PaperProps","onClose","gutterBottom","variant","component","onClick","fontSize","split","map","line","style","size","RegulatedItemModal","memo","onApprove","regulatedItemDeliveryDocLine","myAppsData","sessionHandler","enableRegulatedItemChange","dynamicConfig","itemDescription1","description","itemUPC","itemUpc","regulatedItemInfoFromDeliveryDocumentLine","text","images","fontWeight","imageUrls","displayName","button","borderColor","h4","width","fontweight","flexGrow","textAlign","h6","marginLeft","finishScanningButton","CustomConfirmDialogBox","getHeader","getContent","handleConfirm","Dialog","Typography","DialogContent","mb","DialogContentText","Divider","DialogActions","Button","Scan2DBarcode","fill","xmlns","rx","maskType","maskUnits","x","y","mask","fillRule","clipRule","d","postScannedUpcInfo","receiveInstructionRequest","axiosRequest","apiHandler","upcNumber","ScanUpc","scanDockTagOrTclNavState","useHandlePageRefresh","navigate","useNavigate","useState","upc","setUpc","setDeliveryNumber","setErrorCode","isTclFreeFlow","setIsTclFreeFlow","Map","parsed2dMap","setParsed2dMap","deliveryDoc","setDeliveryDoc","openRegulatedModal","setopenRegulatedModal","openLabelPrintSuccess","setopenLabelPrintSuccess","setAlerts","useContext","AlertContext","GlobalsContext","globals","setGlobals","setHeader","setContent","showHardOveragePopUp","setShowHardOveragePopUp","enableDockTag","enableQtyCorrection","enableSkipQtyPage","enableIsAuditRequired","enableNewTCLRoute","isTCLRouteFlow","isTCLRoute","enableMultiSku2D","useEffect","multiSku","UPC","dockScanUpc","undefined","PO","parsed2DMap","barcodeData","get","onBarcodeScanned","deliveryDocuments","getScannedUpcInfoSuccess","response","allowedDeliveryDocs","data","instructionCode","instruction","length","deliveryNumber","navState","gdmDeliveryDocuments","scannedUpc","auditRequired","isAuditRequired","receivingTier","getReceivingTier","success","appLogger","state","itemQuantity","scannedDataList","getScannedDataList","receivingType","itemQty","receiveForTrustedSeller","isLithium","deliveryDocumentLines","isLithiumIonVerificationRequired","isLimitedQtyVerificationRequired","loading","error","additionalInfo","getScannedUpcInfoError","errorMessage","message","errorCode","receiveItems","useMutation","onSuccess","onError","mutate","onApproveRegulatedItemLables","useCallback","gs1","doorNumber","previouslyScannedDataList","enteredQty","isMultiSKUItem","isVendorComplianceValidated","onApprovePrintingLabelSuccess","cartId","printInstructionPrintJobSuccess","printInstructionPrintJobError","useLazyPrint","onPrintRequestSuccess","onPrintRequestError","printInstructionPrintJob","receiveTrustedItems","inventoryStatus","container","printJob","console","trackingId","disableQuantityCorrection","splitQty","receiveTrustedItemsSuccess","receiveItemsError","deliveryDocs","receiveItemRequest","Number","printingHandler","Object","assign","useQuery","additionalParams","po","poNumber","getScannedUpcInfo","enabled","allowedStatusHandler","refetch","scannedDataListArray","forEach","key","value","push","applicationIdentifier","purpose","ai","useScannedEventListener","event","parsed","detail","scanned","useGlobalKeyboard","title","inputLabel","onClickGlobalKeyboardConfirm","onClickExitDockTag","onClickMultiSKU","scannedTclorDockTagValue","exitButton","icon","IconButton","edge","mr","disabled","actions","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","_excluded","DialogTitleRoot","styled","name","slot","overridesResolver","props","root","padding","flex","DialogTitle","React","inProps","ref","useThemeProps","className","idProp","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","getDialogTitleUtilityClass","useUtilityClasses","DialogContext","titleId","_jsx","_extends","clsx","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2"],"sourceRoot":""}