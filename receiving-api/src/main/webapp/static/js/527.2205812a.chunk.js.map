{"version":3,"file":"static/js/527.2205812a.chunk.js","mappings":"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","sources":["components/common/bottom-card/bottom-card.styles.ts","components/common/bottom-card/bottom-card.tsx","components/dock-tag/dock-tag.tsx","components/regulated-item/regulated-item-modal.tsx","../node_modules/@mui/icons-material/ArrowBack.js","../node_modules/@mui/material/DialogTitle/DialogTitle.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["export const styles = {\n  bottomSpace: {\n    borderTop: \"1px solid lightgray\",\n    m: 2,\n    pb: 10,\n  },\n  chip: {\n    borderRadius: 0,\n    left: 16,\n    position: \"absolute\",\n    top: 16,\n  },\n  wrapper: {\n    alignItems: \"center\",\n    display: \"flex\",\n    height: 50,\n    justifyContent: \"center\",\n    position: \"relative\",\n  },\n  center: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n};\n","import Box from \"@mui/material/Box\";\nimport Chip from \"@mui/material/Chip\";\nimport Paper from \"@mui/material/Paper\";\n\nimport { styles } from \"./bottom-card.styles\";\n\ninterface bottomCardProps {\n  /**\n   * id: String thats needs to be displayed in chip\n   */\n  id?: string | null;\n  children: JSX.Element | JSX.Element[];\n}\n\n/**\n * Paper element with chip at top-left\n * and render children within paper\n */\nexport const BottomCard = ({ id, children }: bottomCardProps) => {\n  return (\n    <Paper elevation={2} sx={{ m: 2 }}>\n      <Box sx={styles.wrapper}>\n        {id && <Chip label={id} color=\"primary\" sx={styles.chip} />}\n      </Box>\n      <Box sx={styles.center}>{children}</Box>\n      <Box sx={styles.bottomSpace} />\n    </Paper>\n  );\n};\n","import { useQuery } from \"@tanstack/react-query\";\nimport { AxiosError, AxiosResponse } from \"axios\";\nimport { useCallback, useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\n\nimport { AlertContext } from \"../../contexts/alert\";\nimport { GlobalsContext } from \"../../contexts/globals\";\nimport { MyAppsData } from \"../../types/my-apps\";\nimport { apiHandler } from \"../../utilities/api-handler\";\nimport { appLogger } from \"../../utilities/app-logs/app-logger\";\nimport { axiosRequest } from \"../../utilities/axios-request\";\nimport { sessionHandler } from \"../../utilities/session-handler\";\nimport { useScannedEventListener } from \"../../utilities/useEventListener\";\nimport { useHandlePageRefresh } from \"../../utilities/useHandlePageRefresh\";\nimport { BottomCard } from \"../common/bottom-card/bottom-card\";\nimport { Barcode } from \"../common/images/barcode\";\nimport { Tote } from \"../common/images/tote\";\nimport { SubHeader } from \"../common/sub-header/sub-header\";\nimport { useGlobalKeyboard } from \"../global-keyboard/useGlobalKeyboard\";\nimport { ScanCartNavState } from \"../scan-cart/scan-cart\";\nimport { DeliveryDocument } from \"../../types/instruction\";\nimport { useLazyPrint } from \"../../utilities/printing/useLazyPrint\";\nimport { PrintRequestResponse } from \"../../types/printing\";\nimport { printingHandler } from \"../../utilities/printing/printing-handler\";\nimport { RegulatedItemModal } from \"../regulated-item/regulated-item-modal\";\nimport { isRegulatedItem } from \"../regulated-item/isRegulatedItem\";\nimport DialogHeavyLift from \"../common/dialog-box/dialog-heavy-lift\";\nimport { PrintJob } from \"../../types/instruction\";\nimport { HeavyLiftLabel } from \"../../types/heavyLiftLablel\";\nimport {v4 as uuid} from \"uuid\";\nimport { ScannedDataListitem } from \"../../types/instruction\";\n\nconst getTclInfoDetails = (tcl: string) =>\n  axiosRequest(apiHandler.getTclInfo(tcl), {\n    description: `Scan-Tcl: tcl ${tcl} validation`,\n  });\n\nconst getDoctagDetails = (dockTag: string) =>\n  axiosRequest(apiHandler.getDockTagInfo(dockTag), {\n    description: `Scan-Dock-Tag: docktag ${dockTag} info`,\n  });\n\nconst getLPNDetails = (lpnOrDockTag: string, doorNumber: string | undefined) => \n  axiosRequest(apiHandler.getLPNorDockTag(lpnOrDockTag, doorNumber), {\n    description: `Scan-LPN-Dock-Tag: lpnOrDockTag ${lpnOrDockTag} info`,\n  });\n\nconst heavyLiftCorrelationId = uuid();\n\n\nexport interface ScanDockTagOrTclNavState extends ScanCartNavState {\n  deliveryNumber: number;\n  scannedTclorDockTagValue: string;\n  dockScanUpc: string;\n  isTCLRoute: boolean;\n  poNumber: string;\n  isReReceivingRoute: boolean;\n  deliveryDocuments: AxiosResponse;\n  parsed2DMap: Map<string, string>;\n  scannedDataList?: ScannedDataListitem[] | null;\n  receivingType? : string | null\n}\n\n/**\n *\n * @route Fetches docktag info\n */\nexport default function DockTagOrTcl() {\n  // get state values from scan-cart page\n  const scanCartNavState = useHandlePageRefresh<ScanCartNavState>();\n  const navigate = useNavigate();\n  const [tclOrDockTag, setTclOrDockTag] = useState(\"\");\n  const [scannedValue, setScannedValue] = useState(\"\");\n  const [poNumber, setPoNumber] = useState(\"\");\n  const [openRegulatedModal, setOpenRegulatedModal] = useState<boolean>(false);\n  const [lpnOrDockTagResponse, setLpnOrDockTagResponse] = useState<any>(null);\n  const [showHeavyLiftPopUp, setShowHeavyLiftPopUp] = useState<Boolean>(false);\n  const [printJobData, setPrintJobData] = useState<PrintJob | null>(null);\n  const [trackingId, setTrackingId] = useState<String | undefined>();\n  const [containerWeight, setContainerWeight] = useState<number | null>(null)\n  const [parsed2DMap, setParsed2DMap] = useState(new Map<string, string>());\n  const { setAlerts } = useContext(AlertContext);\n  const { globals, setGlobals } = useContext(GlobalsContext);\n\n  const myAppsData = sessionHandler.getSessionStorage<MyAppsData>(\"myApps\");\n  const enableDockTag = myAppsData?.dynamicConfig.enableDockTag || false;\n  const enableTwoTier = myAppsData?.dynamicConfig.enableTwoTier || false;\n  const enableNewTCLRoute =\n    myAppsData?.dynamicConfig.enableNewTCLRoute || false;\n  const enableRegulatedItemChange =\n    myAppsData?.dynamicConfig.enableRegulatedItemChange || false;\n  const enableHeavyLiftLabel = myAppsData?.dynamicConfig.enableHeavyLiftLabel || false;\n  const heavyLiftThreshold = myAppsData?.dynamicConfig.heavyLiftThreshold || 1e9;\n\n  const getDockTagDataSuccess = (response: AxiosResponse) => {\n    setAlerts({ success: \"Dock Tag found\" });\n\n    // navigate to scan upc page with data as state\n    appLogger.action(\"Scan-Dock-Tag-Or-Tcl: navigate to scan-upc page\");\n    navigate(\"/scan-upc\", {\n      state: {\n        ...scanCartNavState,\n        deliveryNumber: response.data.delivery.deliveryNumber,\n        scannedTclorDockTagValue: tclOrDockTag,\n      },\n    });\n  };\n\n  const sendForPrint = async (printJob: any) => {\n    const isprinterSelected = await printingHandler.isPrinterSelected();\n      if (isprinterSelected) {\n        printInstructionPrintJob(printJob);\n      } else {\n        setAlerts({\n          error: \"No printer selected, please select a printer to receive\",\n        });\n        appLogger.error(\n          \"Dock-Tag: No printer selected, please select a printer to receive\",\n          {}\n        );\n      }\n  }\n\n  const reReceivingFlow = (response: AxiosResponse) => {\n    const inventoryStatus = response.data.instruction?.container?.inventoryStatus;\n    const printJob = response.data.instruction?.container?.ctrLabel;\n    const trackingIdResponse = response.data.instruction?.container?.trackingId;\n    setPrintJobData(printJob);\n    setTrackingId(trackingIdResponse);\n\n    \n    if(inventoryStatus == 'PICKED'){\n      // casepack re-receiving, send label for printing\n      if (printJob) {\n        appLogger.info(\"Scan-Dock-Tag-Or-Tcl: printjob request\", printJob);\n\n        const itemWeight = parseFloat(response.data.deliveryDocuments[0]?.deliveryDocumentLines[0]?.additionalInfo?.weightQty) || 0;\n        const itemQuantity = parseFloat(response.data.instruction?.receivedQuantity) || 0;\n        const totalWeight = itemQuantity*itemWeight;\n\n        setContainerWeight(totalWeight);\n\n        if(enableHeavyLiftLabel && (totalWeight >= heavyLiftThreshold)){\n          const logInfo: HeavyLiftLabel = {\n            trackingId: trackingIdResponse,\n            correlationId: heavyLiftCorrelationId\n          };\n          appLogger.info('Heavy Lift Label Popup: Popup Displayed', logInfo)\n          setShowHeavyLiftPopUp(true);\n        }\n        else{\n          sendForPrint(printJob);\n        }\n      } else {\n        appLogger.error(\"Scan-Dock-Tag-Or-Tcl: printjob not found\", {});\n        console.error(\"No print job found\");\n        setAlerts({ error: \"No print job found\" });\n      }\n    }\n    else if(inventoryStatus == 'AVAILABLE'){\n      // breakpack re-receiving\n      navigate(\"/breakpack\",{\n        state: {\n          ...scanCartNavState,\n          deliveryNumber: response.data.instruction?.deliveryNumber,\n          scannedTclorDockTagValue: tclOrDockTag,\n          itemQuantity: response.data.instruction?.receivedQuantity,\n          trackingId: response.data.instruction?.container?.trackingId,\n          printJob\n        }\n      })\n    }\n    else{\n      appLogger.error(\n        `Scan-Dock-Tag-Or-Tcl: inventoryStatus ${inventoryStatus} not supported`,\n        {}\n      );\n      console.error(\"Other types are not supported yet\");\n      setAlerts({\n        error: `Other inventoryStatus ${inventoryStatus} not supported.`,\n      });\n    }\n  }\n\n  const getLPNOrDockTagSuccess = (response: AxiosResponse) => {\n    setAlerts({ success: \"Dock Tag found\" });\n    setLpnOrDockTagResponse(response);\n    let reReceiving: Boolean = false;\n    reReceiving = response.data.delivery == null;\n    // navigate to scan upc page with data as state\n    appLogger.action(\"Scan-Dock-Tag-Or-Tcl: navigate to scan-upc page\");\n    if(!reReceiving) {\n    navigate(\"/scan-upc\", {\n      state: {\n        ...scanCartNavState,\n        deliveryNumber: response.data.delivery.deliveryNumber,\n        scannedTclorDockTagValue: tclOrDockTag,\n      },\n    });\n    } else {\n      // re-receiving flow - 2 Tier\n\n      // check if regulated item\n      const isRegulated = isRegulatedItem(\n        response.data.deliveryDocuments[0].deliveryDocumentLines[0]\n          .transportationModes\n      ) || null;\n\n      if (enableRegulatedItemChange && isRegulated) {\n        appLogger.action(\"Scan-Dock-Tag-Or-Tcl: Regulated Item\");\n        setOpenRegulatedModal(true);\n      } else {\n        appLogger.action(\"Scan-Dock-Tag-Or-Tcl: Not a regulated Item\");\n        reReceivingFlow(response);\n      }\n    }\n  };\n\n  const getDockTagDataError = (error: AxiosError<any>) => {\n    if (!enableNewTCLRoute) {\n      setAlerts({\n        error:\n          error?.response?.data?.errorMessage ||\n          error?.message ||\n          \"Dock Tag error\",\n      });\n    }\n  };\n\n  const getDockTagLPNDataError = (error: AxiosError<any>) => {\n      setAlerts({\n        error:\n          error?.response?.data?.errorMessage ||\n          error?.message ||\n          \"Dock Tag / LPN error\",\n      });\n  };\n\n  const getTclDataSuccess = (response: AxiosResponse) => {\n    setAlerts({\n      success: \"TCL found\",\n    });\n    // navigate to scan upc page with data as state\n    appLogger.action(\"Scan-Dock-Tag-Or-Tcl: navigate to scan-upc page\");\n    navigate(\"/scan-upc\", {\n      state: {\n        ...scanCartNavState,\n        deliveryNumber: response.data.deliveryNumber,\n        scannedTclorDockTagValue: tclOrDockTag,\n      },\n    });\n  };\n\n  const getTclDataError = (error: AxiosError<any>) => {\n    setAlerts({\n      error:\n        error?.response?.data?.errorMessage || error?.message || \"TCL error\",\n    });\n  };\n\n  useEffect(() => {\n    // reset multi sku if on root page or scan-dock-tag page\n    setGlobals({\n      ...globals,\n      multiSku: false,\n    });\n    const lengthOfDockTag = 25;\n    scannedValue != \"\" &&\n      enableNewTCLRoute &&\n      scannedValue.length !== lengthOfDockTag &&\n      navigate(\"/scan-upc\", {\n        state: {\n          ...scanCartNavState,\n          poNumber,\n          scannedTclorDockTagValue: tclOrDockTag,\n          dockScanUpc: scannedValue,\n          isTCLRoute: true,\n          parsed2DMap: parsed2DMap\n        },\n      });\n    // eslint-disable-next-line\n  }, [poNumber, scannedValue, parsed2DMap]);\n\n  const { refetch } = useQuery(\n    [\"tclOrDockTag\", tclOrDockTag],\n    () => {\n      setAlerts({ loading: true });\n      return enableTwoTier ? getLPNDetails(tclOrDockTag, scanCartNavState?.doorNumber) : (enableDockTag\n        ? getDoctagDetails(tclOrDockTag)\n        : getTclInfoDetails(tclOrDockTag));\n    },\n    {\n      enabled: !!tclOrDockTag,\n      onSuccess: enableTwoTier? getLPNOrDockTagSuccess: (enableDockTag ? getDockTagDataSuccess : getTclDataSuccess),\n      onError: enableTwoTier? getDockTagLPNDataError: ( enableDockTag ? getDockTagDataError : getTclDataError),\n    }\n  );\n\n  const onBarcodeScanned = (value: string) => {\n    appLogger.action(`Scan-Dock-Tag-Or-Tcl: entered/scanned ${value}`);\n    const lengthOfDockTag = 25;\n    if (enableNewTCLRoute && value.length !== lengthOfDockTag) {\n      setScannedValue(value);\n    } else {\n      if (tclOrDockTag === value) {\n        refetch();\n      } else {\n        setTclOrDockTag(value);\n      }\n    }\n  };\n\n  useScannedEventListener((event) => {\n    const parsed = event.detail.parsed.get(\"1D\");\n    const parsed2DMap = event.detail.parsed.get(\"2D\");\n\n    if (parsed2DMap) {\n      if (\n        parsed2DMap.get(\"400\") &&\n        parsed2DMap.get(\"01\") &&\n        parsed2DMap.get(\"30\")\n      ) {\n        setParsed2DMap(parsed2DMap);\n        setPoNumber(parsed2DMap.get(\"400\"));\n        onBarcodeScanned(parsed2DMap.get(\"01\"));\n        if (parsed2DMap.get(\"gs1\")) {\n          setGlobals({\n            ...globals,\n            previouslyScannedDataList: [parsed2DMap.get(\"gs1\")],\n          });\n        }\n      } else {\n        setAlerts({\n          error: `System is unable to process QR code at the moment. Please scan item UPC to receive.`,\n        });\n      }\n    } else if (parsed && !parsed2DMap) {\n      onBarcodeScanned(parsed);\n    } else {\n      setAlerts({\n        error: `Unexpected barcode scanned ${event.detail.scanned}`,\n      });\n    }\n  });\n\n  useGlobalKeyboard(\n    {\n      title: enableNewTCLRoute\n        ? \"Enter Dock Tag / UPC\"\n        : enableDockTag\n        ? \"Enter Dock Tag / LPN\"\n        : \"Enter TCL\",\n      inputLabel: enableNewTCLRoute\n        ? \"Dock Tag / UPC\"\n        : enableDockTag\n        ? \"Dock Tag / LPN\"\n        : \"TCL\",\n      onClickGlobalKeyboardConfirm: (value: string) => onBarcodeScanned(value),\n    },\n    [tclOrDockTag]\n  );\n\n  const onBackClick = useCallback(() => {\n    appLogger.action(\"Scan-Dock-Tag: Back button clicked\");\n    navigate(\"/scan-cart\", {\n      state: { ...scanCartNavState },\n      replace: true,\n    });\n  }, [navigate, scanCartNavState]);\n\n  const printInstructionPrintJobSuccess = useCallback(\n    (response: PrintRequestResponse[]) => {\n      appLogger.info(\"Scan-Dock-Tag-Or-Tcl: printjob success\", response);\n      setAlerts({ success: \"Labels were sent to printing\" });\n      appLogger.action(\"Scan-Dock-Tag-Or-Tcl: navigate to scan-dock-tag page\");\n      navigate(\"/scan-dock-tag-or-tcl\", {\n        state: {\n          cartId: scanCartNavState?.cartId,\n          doorNumber: scanCartNavState?.cartId,\n        },\n      });\n    },\n    [setAlerts, scanCartNavState, navigate]\n  );\n\n  const printInstructionPrintJobError = useCallback(\n    (error: unknown) => {\n      appLogger.error(\"Scan-Dock-Tag-Or-Tcl: printjob error\", error as object);\n      setAlerts({\n        error:\n          \"There was an error printing. Check the printer status or re-connect to continue.\",\n      });\n    },\n    [setAlerts]\n  );\n\n  const [printInstructionPrintJob] = useLazyPrint({\n    onPrintRequestSuccess: printInstructionPrintJobSuccess,\n    onPrintRequestError: printInstructionPrintJobError,\n  });\n\n  return (\n    <>\n      <SubHeader\n        icon={\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n            disabled\n          >\n            <Barcode />\n          </IconButton>\n        }\n        title={\n          enableDockTag\n            ? enableNewTCLRoute\n              ? \"Scan Box Id / UPC / Dock Tag / LPN\"\n              : \"Dock Tag / LPN\"\n            : \"Scan TCL\"\n        }\n        enableBack\n        onClickBack={onBackClick}\n      />\n      {showHeavyLiftPopUp && printJobData && trackingId && containerWeight && (\n        <DialogHeavyLift \n          open={true}\n          header=\"Heavy Lift Label\"\n          content={`We've identified this Box is heavy! (${containerWeight} Lbs). Please place a Heavy label and carefully handle this case.\\n\\n\n          Esta caja es pesada! (${containerWeight} Lbs). Coloque una pagetina de 'Heavy' y manipule con cuidado esta caja.\\n\\n\n          Cette caisse est lourde! (${containerWeight} Lbs). Ajoutez une etiquette 'Heavy' et faites attention quand vous manipulez cette caisse.`}\n          handleConfirm={()=>{\n            setAlerts({ loading: true });\n            const logInfo: HeavyLiftLabel = {\n              trackingId: trackingId,\n              correlationId: heavyLiftCorrelationId\n            };\n            appLogger.info('Heavy Lift Label Popup: Confirm', logInfo)\n            setShowHeavyLiftPopUp(false);\n            setPrintJobData(null);\n            setTrackingId(undefined);\n            sendForPrint(printJobData);\n          }}\n        />\n      )}\n      {openRegulatedModal && (\n        <RegulatedItemModal\n          regulatedItemDeliveryDocLine={\n            lpnOrDockTagResponse?.data.deliveryDocuments ? lpnOrDockTagResponse?.data.deliveryDocuments[0].deliveryDocumentLines[0] : null\n          }\n          open={openRegulatedModal}\n          onApprove={() => {\n            setOpenRegulatedModal(false);\n            reReceivingFlow(lpnOrDockTagResponse)\n          }}\n          onClose={() => {\n            setOpenRegulatedModal(false);\n          }}\n        />\n      )}\n      <Box sx={{ mt: 17 }} />\n      <BottomCard id={`Cart #: ${scanCartNavState?.cartId}`}>\n        <Tote />\n      </BottomCard>\n    </>\n  );\n}\n","import { memo } from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { DeliveryDocumentLine } from \"../../types/instruction\";\nimport { MyAppsData } from \"../../types/my-apps\";\nimport { sessionHandler } from \"../../utilities/session-handler\";\nimport {\n  RegulatedImages,\n  regulatedItemInfoFromDeliveryDocumentLine,\n} from \"./regulated-images\";\nimport { styles } from \"./regulated-items.styles\";\n\ninterface RegulatedItemModalProps {\n  open: boolean;\n  onApprove: () => void;\n  onClose: () => void;\n  regulatedItemDeliveryDocLine?: DeliveryDocumentLine | null;\n}\n/**\n * modal to render regulated item function\n */\nexport const RegulatedItemModal = memo(\n  ({\n    open,\n    onApprove,\n    onClose,\n    regulatedItemDeliveryDocLine,\n  }: RegulatedItemModalProps) => {\n    if (!regulatedItemDeliveryDocLine) {\n      return null;\n    }\n\n    const myAppsData = sessionHandler.getSessionStorage<MyAppsData>(\"myApps\");\n    const enableRegulatedItemChange =\n      myAppsData?.dynamicConfig.enableRegulatedItemChange || false;\n\n    const itemDescription1 = enableRegulatedItemChange\n      ? regulatedItemDeliveryDocLine.description\n      : regulatedItemDeliveryDocLine.itemDescription1;\n\n    const itemUPC = enableRegulatedItemChange\n      ? regulatedItemDeliveryDocLine.itemUpc\n      : regulatedItemDeliveryDocLine.itemUPC;\n\n    const { text = \"\", images } = regulatedItemInfoFromDeliveryDocumentLine(\n      regulatedItemDeliveryDocLine\n    );\n\n    return (\n      <Dialog\n        open={open}\n        onClose={onClose}\n        aria-labelledby=\"regulated-item-modal-title\"\n        aria-describedby=\"regulated-item-modal-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\" sx={styles.dialogText}>\n          <Typography variant=\"h6\" component=\"div\" sx={{ fontWeight: \"bold\" }}>\n            {text}\n          </Typography>\n          <Typography variant=\"caption\" component=\"div\">\n            Please confirm all cases include the labels below.\n          </Typography>\n        </DialogTitle>\n        <DialogContent sx={styles.dialogText}>\n          <RegulatedImages imageUrls={images} />\n          <Box id=\"alert-dialog-description\" sx={{ color: \"white\" }}>\n            <Typography variant=\"h6\" sx={styles.itemDescription}>\n              {itemDescription1}\n            </Typography>\n            <Typography gutterBottom variant=\"body2\">\n              {`UPC: ${itemUPC}`}\n            </Typography>\n          </Box>\n        </DialogContent>\n        <Box sx={styles.info}>\n          Please apply this label or confirm the label is applied.\n        </Box>\n        <DialogActions>\n          <Button variant=\"contained\" sx={styles.button} onClick={onApprove}>\n            Continue\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n);\nRegulatedItemModal.displayName = \"RegulatedItemModal\";\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"id\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\nimport DialogContext from '../Dialog/DialogContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\n\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n\n  const {\n    className,\n    id: idProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId: id = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: id\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["styles","bottomSpace","borderTop","m","pb","chip","borderRadius","left","position","top","wrapper","alignItems","display","height","justifyContent","center","flexDirection","BottomCard","id","children","Paper","elevation","sx","Box","Chip","label","color","heavyLiftCorrelationId","uuid","DockTagOrTcl","scanCartNavState","useHandlePageRefresh","navigate","useNavigate","useState","tclOrDockTag","setTclOrDockTag","scannedValue","setScannedValue","poNumber","setPoNumber","openRegulatedModal","setOpenRegulatedModal","lpnOrDockTagResponse","setLpnOrDockTagResponse","showHeavyLiftPopUp","setShowHeavyLiftPopUp","printJobData","setPrintJobData","trackingId","setTrackingId","containerWeight","setContainerWeight","Map","parsed2DMap","setParsed2DMap","setAlerts","useContext","AlertContext","GlobalsContext","globals","setGlobals","myAppsData","sessionHandler","enableDockTag","dynamicConfig","enableTwoTier","enableNewTCLRoute","enableRegulatedItemChange","enableHeavyLiftLabel","heavyLiftThreshold","sendForPrint","printJob","printingHandler","printInstructionPrintJob","error","appLogger","reReceivingFlow","response","inventoryStatus","data","instruction","container","ctrLabel","trackingIdResponse","itemWeight","parseFloat","deliveryDocuments","deliveryDocumentLines","additionalInfo","weightQty","totalWeight","receivedQuantity","logInfo","correlationId","console","state","deliveryNumber","scannedTclorDockTagValue","itemQuantity","useEffect","multiSku","length","dockScanUpc","isTCLRoute","refetch","useQuery","loading","lpnOrDockTag","doorNumber","axiosRequest","apiHandler","description","dockTag","tcl","enabled","onSuccess","success","reReceiving","delivery","isRegulated","isRegulatedItem","transportationModes","onError","errorMessage","message","onBarcodeScanned","value","useScannedEventListener","event","parsed","detail","get","previouslyScannedDataList","scanned","useGlobalKeyboard","title","inputLabel","onClickGlobalKeyboardConfirm","onBackClick","useCallback","replace","printInstructionPrintJobSuccess","cartId","printInstructionPrintJobError","useLazyPrint","onPrintRequestSuccess","onPrintRequestError","icon","size","edge","mr","disabled","enableBack","onClickBack","open","header","content","handleConfirm","undefined","regulatedItemDeliveryDocLine","onApprove","onClose","mt","RegulatedItemModal","memo","itemDescription1","itemUPC","itemUpc","regulatedItemInfoFromDeliveryDocumentLine","text","images","variant","component","fontWeight","imageUrls","gutterBottom","onClick","displayName","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","_excluded","DialogTitleRoot","styled","Typography","name","slot","overridesResolver","props","root","padding","flex","DialogTitle","React","inProps","ref","useThemeProps","className","idProp","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","getDialogTitleUtilityClass","useUtilityClasses","DialogContext","titleId","_jsx","_extends","clsx","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2"],"sourceRoot":""}